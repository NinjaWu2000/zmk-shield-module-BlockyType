#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/pointing.h>
#include <locale/keys_de.h>
#include "zmk-helpers/helper.h"

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1500  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20    // default: 10



/ {
    // |00|01|02|03|04|05|         |06|07|08|09|10|11|
    // |12|13|14|15|16|17|         |18|19|20|21|22|23|
    // |24|25|26|27|28|29|         |30|31|32|33|34|35|
    //                |36|37|   |38|39|

    combos {
        compatible = "zmk,combos";
        combo_layer_switch {
            timeout-ms = <50>;
            bindings = <&to 3>;
            key-positions = <37 38>;
            layers = <0 1>;
        };
        combo_back_to_default {
            timeout-ms = <50>;
            bindings = <&to 0>;
            key-positions = <36 39>;
            layers = <0 1 2 3 4>;
        };
    };


    behaviors {
        #include "behaviors/alt_modifiers.keymap"
        #include "behaviors/shift_modifiers.keymap"
        #include "behaviors/hold_tap.keymap"
        #include "behaviors/altgr_modifiers.keymap"
        ht_tp: hold_tap_tap_preferred {
                compatible = "zmk,behavior-hold-tap";
                #binding-cells = <2>;
                tapping-term-ms = <200>;
                quick-tap-ms = <0>;
                flavor = "tap-preferred";
                bindings = <&kp>, <&kp>;
        };
        tdb: tap_dance_bootloader {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&bootloader>;
        };
    };

    macros {
        copy: copy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp C>
                , <&macro_release &kp LCTRL>
                ;
        };
        cut: cut {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp X>
                , <&macro_release &kp LCTRL>
                ;
        };
        paste: copy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp V>
                , <&macro_release &kp LCTRL>
                ;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        //Layer 0
        default_layer { 
            display-name = "Base";
            bindings = <
                &none  &kp DE_Q                          &kp DE_W          &kp DE_F                          &kp DE_P            &kp DE_B                            &kp DE_J  &kp DE_L            &agr_DE_U_DE_U_UMLAUT  &kp DE_Y          &s_DE_EXCL_DE_QMARK               &none
                    
                &none  &ht_tp_agr_DE_A_DE_A_UMLAUT LGUI X  &ht_tp LALT DE_R  &ht_tp_agr_DE_S_DE_SHARP_S LCTRL X  &ht_tp LSHIFT DE_T  &kp DE_G                            &kp DE_M  &ht_tp RSHIFT DE_N  &ht_tp RCTRL DE_E    &ht_tp RALT DE_I  &ht_tp_agr_DE_O_DE_O_UMLAUT RGUI X  &none
                    
                &none  &kp DE_Z                          &kp DE_X          &kp DE_C                          &kp DE_D            &kp DE_V                            &kp DE_K  &kp DE_H            &kp DE_COMMA         &kp DE_PERIOD     &kp DE_MINUS                      &none
                
                                                                                                                                 &a_BSPC_DEL  &key_repeat     &to 1  &kp SPACE 
            >;
        };
        //Layer 1
        symbol_layer { 
            display-name = "Symbol";
            bindings = <
                &none  &s_DE_DOLLAR_DE_EURO  &s_DE_STAR_DE_LT                 &s_DE_PLUS_DE_GT                  &kp TAB              &s_DE_DQT_DE_SQT                          &s_DE_LBRC_DE_RBRC  &agr_s_DE_LPAR_DE_RPAR_HOME           &agr_s_DE_LBKT_DE_RBKT_PAGE_DOWN     &agr_s_DE_EQUAL_DE_TILDE_PAGE_UP  &ht_tp_agr_to_2_END_to_layer 4 X     &none
                    
                &none  &ht_tp LGUI KP_N1     &ht_tp_agr_KP_N2_DE_SUPER2 LALT X  &ht_tp_agr_KP_N3_DE_SUPER3 LCTRL X  &ht_tp LSHIFT KP_N4  &kp KP_N5                                 &kp KP_N6           &ht_tp_s_KP_N7_LEFT_ARROW RSHIFT X  &ht_tp_s_KP_N8_DOWN_ARROW RCTRL X  &ht_tp_s_KP_N9_UP_ARROW RALT X  &ht_tp_s_KP_N0_RIGHT_ARROW RGUI X  &none
                    
                &none  &s_DE_ACUTE_DE_GRAVE  &s_DE_AT_DE_SECTION              &kp DE_PERCENT                    &kp ESC              &s_DE_AMPS_DE_CARET                       &s_DE_HASH_DE_DEG   &ht_tp_h_paste DE_FSLH X             &ht_tp_h_copy DE_BSLH X              &ht_tp_h_cut DE_PIPE X           &none                              &none
                
                                                                                                                                     &kp LSHIFT           &kp ENTER     &to 0  &kp RSHIFT 
            >;
        };
        //Layer 2
        function_layer {
            display-name = "Function";
            bindings = <
                &none  &s_DE_MINUS_DE_FSLH  &kp KP_N7            &s_KP_N8_UP_ARROW    &kp KP_N9             &kp ENTER                               &s_C_MUTE_F1  &s_C_VOL_UP_F2  &s_C_VOL_DN_F3  &kp F4  &none  &none
                
                &none  &s_DE_PLUS_DE_STAR   &s_KP_N4_LEFT_ARROW  &kp KP_N5            &s_KP_N6_RIGHT_ARROW  &kp KP_N0                               &s_C_STOP_F5  &s_C_PLAY_PAUSE_F6  &s_C_NEXT_F7  &s_C_PREVIOUS_F8  &none    &none
                
                &none  &none                &kp KP_N1            &s_KP_N2_DOWN_ARROW  &kp KP_N3             &s_DE_COMMA_DE_PERIOD                   &kp F9  &kp F10     &kp F11          &kp F12        &none    &none
                
                                                                                                            &kp LSHIFT             &none     &to 0  &kp RSHIFT 
            >;
        };
        //Layer 3
        navigation_layer {
            display-name = "Navigation";
            bindings = <
                &none  &none  &none     &none     &none     &none                   &none  &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP  &kp END  &none
                
                &none  &none  &mkp MB3  &mkp MB2  &mkp MB1  &none                   &none  &a_MOVE_LEFT_SCRL_LEFT  &a_MOVE_DOWN_SCRL_DOWN  &a_MOVE_UP_SCRL_UP  &a_MOVE_RIGHT_SCRL_RIGHT  &none
                
                &none  &none  &none     &none     &none     &none                   &none  &none     &none          &none        &none    &none
                
                                                            &kp LALT  &none     &none  &kp RALT 
            >;
        };
        //Layer 4
        system_layer {
            display-name = "System";
            bindings = <
                &none  &tdb   &none  &none  &none  &none                  &bt BT_SEL 0     &bt BT_PRV        &bt BT_NXT       &bt BT_CLR  &tdb   &none
                
                &none  &none  &none  &none  &none  &none                  &rgb_ug RGB_TOG  &s_RGB_BRI_RGB_BRD  &s_RGB_SAI_RGB_SAD  &s_RGB_HUI_RGB_HUD       &none  &none
                           
                &none  &none  &none  &none  &none  &none                  &rgb_ug RGB_COLOR_HSB(0,0,100)  &rgb_ug RGB_COLOR_HSB(240,100,100)  &rgb_ug RGB_COLOR_HSB(0,100,100)  &rgb_ug RGB_COLOR_HSB(30,100,100)  &none  &none
                
                                                         &kp LSHIFT  &none    &none  &none 
            >;
        };

    };
};
